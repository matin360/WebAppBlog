@model BlogWeb.WebUI.Models.CommentPostModel
@{ 
	var comment = Model;
}
@using (@Html.BeginForm("Add", "Comment", FormMethod.Post, htmlAttributes: new { @class = "p-3 p-md-5 bg-light" }))
{
	@Html.AntiForgeryToken()
	@Html.HiddenFor(x => x.PostId)
<div class="form-group">
	@Html.LabelFor(x => x.Username)
	@Html.TextBoxFor(x => x.Username, htmlAttributes: new { @class = "form-control", id = "name" })
	@Html.ValidationMessageFor(x => x.Username)
</div>
<div class="form-group">
	@Html.LabelFor(x => x.Email)
	@Html.TextBoxFor(x => x.Email, htmlAttributes: new { @class = "form-control", id = "email" })
	@Html.ValidationMessageFor(x => x.Email)
</div>
<div class="form-group">
	@Html.LabelFor(x => x.Website)
	@Html.TextBoxFor(x => x.Website, htmlAttributes: new { @class = "form-control", id = "website" })
	@Html.ValidationMessageFor(x => x.Website)
</div>
<div class="form-group">
	@Html.LabelFor(x => x.Message)
	@Html.TextAreaFor(x => x.Message, rows: 10, columns: 30, htmlAttributes: new { @class = "form-control", id = "message" })
	@Html.ValidationMessageFor(x => x.Message)
</div>
	<div class="form-group">
		<input type="submit" value="Post Comment" class="btn py-3 px-4 btn-primary">
	</div>
}

@section ValidationSection{
	<script src="~/Scripts/jquery.validate.min.js"></script>
	<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}